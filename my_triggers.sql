-- ALL_WORKERS_ELAPSED
CREATE OR REPLACE TRIGGER TRG_DENY_INSERT_ALL_WORKERS
BEFORE INSERT ON ALL_WORKERS_ELAPSED
FOR EACH ROW
BEGIN
  RAISE_APPLICATION_ERROR(-20001, 'Insertion not allowed on this view.');
END;
/

--  AUDIT_ROBOT
CREATE OR REPLACE TRIGGER TRG_AUDIT_NEW_ROBOT
AFTER INSERT ON ROBOTS
FOR EACH ROW
BEGIN
  INSERT INTO AUDIT_ROBOT (robot_id, created_at)
  VALUES (:NEW.id, SYSDATE);
END;
/

-- Coh√©rence des usines
CREATE OR REPLACE TRIGGER TRG_CHECK_FACTORY_COUNT
BEFORE UPDATE OR DELETE ON ROBOTS_FACTORIES
BEGIN
  IF (SELECT COUNT(*) FROM FACTORIES) != (SELECT COUNT(*) FROM ALL_WORKERS WHERE REGEXP_LIKE(id, 'WORKERS_FACTORY_[0-9]+')) THEN
    RAISE_APPLICATION_ERROR(-20002, 'Factory count mismatch. Operation not allowed.');
  END IF;
END;
/
